// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiteStatistic.Data.EFCore;

namespace SiteStatistic.Data.EFCore.Migrations
{
    [DbContext(typeof(SiteStatisticDbContext))]
    [Migration("20210210211829_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SiteStatistic.Core.Data.Entities.SiteSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("SiteSection", "dbo");
                });

            modelBuilder.Entity("SiteStatistic.Core.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MiddleName");

                    b.HasKey("Id");

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("SiteStatistic.Core.Data.Entities.VisitedSiteSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SiteSectionId")
                        .HasColumnType("int")
                        .HasColumnName("SiteSectionId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<DateTime>("VisitedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("VisitedDate");

                    b.HasKey("Id");

                    b.HasIndex("SiteSectionId");

                    b.HasIndex("UserId");

                    b.ToTable("VisitedSiteSection", "dbo");
                });

            modelBuilder.Entity("SiteStatistic.Core.Data.Entities.VisitedSiteSection", b =>
                {
                    b.HasOne("SiteStatistic.Core.Data.Entities.SiteSection", "SiteSection")
                        .WithMany("VisitedSiteSections")
                        .HasForeignKey("SiteSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiteStatistic.Core.Data.Entities.User", "User")
                        .WithMany("VisitedSiteSections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiteSection");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SiteStatistic.Core.Data.Entities.SiteSection", b =>
                {
                    b.Navigation("VisitedSiteSections");
                });

            modelBuilder.Entity("SiteStatistic.Core.Data.Entities.User", b =>
                {
                    b.Navigation("VisitedSiteSections");
                });
#pragma warning restore 612, 618
        }
    }
}
